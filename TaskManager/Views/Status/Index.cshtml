@model StatusViewModel

@{
	ViewData["Title"] = "Statuses";
}

<h1>Statuses</h1>
@if (User.Identity.IsAuthenticated)
{
	<a class="btn btn-outline-primary shadow-sm" asp-controller="Status" asp-action="Create">Create new status</a>
}
else
{
	<a class="btn btn-outline-primary shadow-sm" asp-controller="Auth" asp-action="Login">Create new status</a>
}
<table class="table table-borderless table-striped mt-5 bg-white">
	<thead>
		<tr>
			<th scope="col">
				@Html.DisplayNameFor(model => model.ID)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(model => model.Created)
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var status in Model.Statuses)
		{
			<tr>
				<th scope="row">@status.ID</th>
				<td>
					@Html.DisplayFor(modelItem => status.Title)
				</td>
				<td>
					@Html.DisplayFor(modelItem => status.Created)
				</td>
				<td class="d-flex flex-wrap">
					@if (User.Identity.IsAuthenticated)
					{
						<a class="btn btn-outline-primary me-1 shadow-sm" asp-action="Edit"
				   asp-route-id="@status.ID">Edit</a>
						<a class="btn btn-outline-danger ms-1 shadow-sm" asp-action="Delete"
				   asp-route-id="@status.ID">Delete</a>
					}
					else
					{
						<a class="btn btn-outline-primary mx-1 shadow-sm" asp-controller="Auth"
				   asp-action="Login">Edit</a>
						<a class="btn btn-outline-danger ms-1 shadow-sm" asp-controller="Auth"
				   asp-action="Login">Delete</a>
					}
				</td>
			</tr>
		}
	</tbody>
</table>
