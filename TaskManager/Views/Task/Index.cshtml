@model TaskViewModel
@{
	ViewData["Title"] = "Tasks";
}

<h1>Tasks</h1>
@if (User.Identity.IsAuthenticated)
{
	<a class="btn btn-outline-primary" asp-controller="Task" asp-action="Create">Create new task</a>
}
else
{
	<a class="btn btn-outline-primary" asp-controller="Auth" asp-action="Login">Create new status</a>
}
<table class="table table-borderless table-striped mt-5 bg-white">
	<thead>
		<tr>
			<th scope="col">
				@Html.DisplayNameFor(model => model.ID)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(model => model.Title)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(model => model.Status)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(model => model.Author)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(model => model.Performer)
			</th>
			<th scope="col">
				@Html.DisplayNameFor(model => model.CreationDate)
			</th>
		</tr>
	</thead>
	<tbody>
		@foreach (var task in Model.Tasks)
		{
			<tr>
				<th scope="row">@task.ID</th>
				<td>
					@Html.DisplayFor(modelItem => task.Title)
					</td>
				<td>
					@Html.DisplayFor(modelItem => task.Status)
					</td>
				<td>
					@Html.DisplayFor(modelItem => task.Author)
					</td>
				<td>
					@Html.DisplayFor(modelItem => task.Performer)
					</td>
				<td>
					@Html.DisplayFor(modelItem => task.Created)
					</td>
				<td class="d-flex flex-wrap">
					<a asp-action="Details" asp-route-id="@task.ID" class="btn btn-outline-info mx-1">Details</a>
					@if (User.Identity.IsAuthenticated)
					{
						<a class="btn btn-outline-primary mx-1" asp-action="Edit" asp-route-id="@task.ID">Edit</a>
						<a class="btn btn-outline-danger ms-1" asp-action="Delete" asp-route-id="@task.ID">Delete</a>
					}
					else
					{
						<a class="btn btn-outline-primary mx-1" asp-controller="Auth" asp-action="Login">Edit</a>
						<a class="btn btn-outline-danger ms-1" asp-controller="Auth" asp-action="Login">Delete</a>
					}
				</td>
			</tr>
		}
	</tbody>
</table>


